<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>memcpy.io - chromiumos</title><link href="https://memcpy.io/" rel="alternate"></link><link href="https://memcpy.io/feeds/chromiumos.atom.xml" rel="self"></link><id>https://memcpy.io/</id><updated>2017-11-28T11:32:00+01:00</updated><entry><title>Building ChromiumOS for Qemu</title><link href="https://memcpy.io/building-chromiumos-for-qemu.html" rel="alternate"></link><published>2017-11-28T11:32:00+01:00</published><updated>2017-11-28T11:32:00+01:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2017-11-28:/building-chromiumos-for-qemu.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="/images/2017-11-28_chromeos_qemu.png" title="ChromiumOS running on Qemu"&gt;&lt;/p&gt;
&lt;p&gt;So let's start off by covering how ChromiumOS relates to ChromeOS. The
ChromiumOS project is essentially ChromeOS minus branding and some
packages for things like the media digital restrictions management.&lt;/p&gt;
&lt;p&gt;But on the whole, almost everything is there, and the pieces that aren't,
you don't &lt;em&gt;need&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;ChromiumOS&lt;/h2&gt;
&lt;h3&gt;Depot tools&lt;/h3&gt;
&lt;p&gt;In order to check out ChromiumOS and other large Google projects,
you'll need depot tools.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git&lt;/span&gt;
&lt;span class="err"&gt;export PATH=$PATH:$(PWD)/depot_tools&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maybe you'd want to add the PATH export to your .bashrc.&lt;/p&gt;
&lt;h3&gt;Building ChromiumOS&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir chromiumos
cd chromiumos
repo init -u https://chromium.googlesource.com/chromiumos/manifest.git --repo-url https://chromium.googlesource.com/external/repo.git [-g minilayout]
repo sync -j75
cros_sdk
export BOARD=amd64-generic
./setup_board --board â€¦&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Alt text" src="/images/2017-11-28_chromeos_qemu.png" title="ChromiumOS running on Qemu"&gt;&lt;/p&gt;
&lt;p&gt;So let's start off by covering how ChromiumOS relates to ChromeOS. The
ChromiumOS project is essentially ChromeOS minus branding and some
packages for things like the media digital restrictions management.&lt;/p&gt;
&lt;p&gt;But on the whole, almost everything is there, and the pieces that aren't,
you don't &lt;em&gt;need&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;ChromiumOS&lt;/h2&gt;
&lt;h3&gt;Depot tools&lt;/h3&gt;
&lt;p&gt;In order to check out ChromiumOS and other large Google projects,
you'll need depot tools.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git&lt;/span&gt;
&lt;span class="err"&gt;export PATH=$PATH:$(PWD)/depot_tools&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maybe you'd want to add the PATH export to your .bashrc.&lt;/p&gt;
&lt;h3&gt;Building ChromiumOS&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir chromiumos
cd chromiumos
repo init -u https://chromium.googlesource.com/chromiumos/manifest.git --repo-url https://chromium.googlesource.com/external/repo.git [-g minilayout]
repo sync -j75
cros_sdk
export BOARD=amd64-generic
./setup_board --board=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
./build_packages --board=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
./build_image --board=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; --boot_args &amp;quot;earlyprintk=serial,keep console=tty0&amp;quot; --noenable_rootfs_verification test
./image_to_vm.sh --board=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; --test_image
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;How to (not) boot ChromiumOS&lt;/h3&gt;
&lt;p&gt;So, this is a command baked into ChromiumOS using the &lt;code&gt;cros_start_vm&lt;/code&gt; command,
but at least on my machine it does not seem to boot properly.
I have as of yet not been able to get any graphical output (over VNC).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cros_sdk
./bin/cros_start_vm --image_path=../build/images/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/latest/chromiumos_qemu_image.bin --board=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Running Qemu ourselves&lt;/h2&gt;
&lt;p&gt;So if the intended tools don't work, we'll just have to roll up our sleeves
and do it ourselves. This is how I got ChromiumOS booting.&lt;/p&gt;
&lt;h3&gt;Install build dependencies&lt;/h3&gt;
&lt;p&gt;These dependencies were available on Ubuntu 17.10, some alternative packages
might be needed for &lt;em&gt;your&lt;/em&gt; distributions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sudo apt install autoconf libaio-dev libbluetooth-dev libbrlapi-dev libbz2-dev libcap-dev libcap-ng-dev libcurl4-gnutls-dev libepoxy-dev libfdt-dev libgbm-dev libgles2-mesa-dev libglib2.0-dev libgtk-3-dev libibverbs-dev libjpeg8-dev liblzo2-dev libncurses5-dev libnuma-dev librbd-dev librdmacm-dev libsasl2-dev libsdl1.2-dev libsdl2-dev libseccomp-dev libsnappy-dev libssh2-1-dev libspice-server-dev libspice-server1 libtool libusb-1.0-0 libusb-1.0-0-dev libvde-dev libvdeplug-dev libvte-dev libxen-dev valgrind xfslibs-dev xutils-dev zlib1g-dev libusbredirhost-dev usbredirserver&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Virglrenderer&lt;/h3&gt;
&lt;p&gt;Virglrenderer creates a virtual 3D GPU, that allows the Qemu guest to use the
graphics capabilities of the host machine.&lt;/p&gt;
&lt;p&gt;This step is optional, but allows for hardware accelerated OpenGL support on
the guest system.
If you don't want to use Virgl, remove it from the Qemu configure step and
the Qemu runtime flags.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;git clone git://git.freedesktop.org/git/virglrenderer&lt;/span&gt;
&lt;span class="err"&gt;cd virglrenderer&lt;/span&gt;
&lt;span class="err"&gt;./autogen.sh&lt;/span&gt;
&lt;span class="err"&gt;make -j7&lt;/span&gt;
&lt;span class="err"&gt;sudo make install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Qemu&lt;/h3&gt;
&lt;p&gt;Qemu is a full system emulator, and supports a multitude of machine architectures.
We're going to to use &lt;em&gt;x86_64&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;git clone git://git.qemu-project.org/qemu.git&lt;/span&gt;
&lt;span class="err"&gt;mkdir -p qemu/build&lt;/span&gt;
&lt;span class="err"&gt;cd qemu/build&lt;/span&gt;
&lt;span class="err"&gt;../configure --target-list=x86_64-softmmu --enable-gtk --with-gtkabi=3.0 --enable-kvm --enable-spice --enable-usb-redir --enable-libusb --enable-virglrenderer --enable-opengl&lt;/span&gt;
&lt;span class="err"&gt;make -j7&lt;/span&gt;
&lt;span class="err"&gt;sudo make install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Run image&lt;/h3&gt;
&lt;p&gt;Now you can boot the image using Qemu.&lt;/p&gt;
&lt;p&gt;Note that running Qemu with the virtio options requires that your host machine
is running a Linux kernel which was built with the kconfig options &lt;code&gt;CONFIG_DRM_VIRTIO&lt;/code&gt;,
&lt;code&gt;CONFIG_VIRT_DRIVERS&lt;/code&gt; and &lt;code&gt;CONFIG_VIRTIO_XXXX&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;cd chromiumos&lt;/span&gt;
&lt;span class="err"&gt;/usr/local/bin/qemu-system-x86_64 \&lt;/span&gt;
&lt;span class="err"&gt;    -enable-kvm \&lt;/span&gt;
&lt;span class="err"&gt;    -m 2G \&lt;/span&gt;
&lt;span class="err"&gt;    -smp 4 \&lt;/span&gt;
&lt;span class="err"&gt;    -hda src/build/images/amd64-generic/latest/chromiumos_qemu_image.bin \&lt;/span&gt;
&lt;span class="err"&gt;    -vga virtio \&lt;/span&gt;
&lt;span class="err"&gt;    -net nic,model=virtio \&lt;/span&gt;
&lt;span class="err"&gt;    -net user,hostfwd=tcp:127.0.0.1:9222-:22 \&lt;/span&gt;
&lt;span class="err"&gt;    -usb -usbdevice keyboard \&lt;/span&gt;
&lt;span class="err"&gt;    -usbdevice mouse \&lt;/span&gt;
&lt;span class="err"&gt;    -device virtio-gpu-pci,virgl \&lt;/span&gt;
&lt;span class="err"&gt;    -display gtk,gl=on&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Hopefully this guide will have helped you to build all of the software needed to
boot your very own ChromiumOS.&lt;/p&gt;
&lt;p&gt;This post has been a part of work undertaken by my employer &lt;a href="http://www.collabora.com"&gt;Collabora&lt;/a&gt;.&lt;/p&gt;</content><category term="kernel"></category><category term="linux"></category><category term="kernel"></category><category term="chromeos"></category><category term="chromiumos"></category><category term="chromium"></category><category term="qemu"></category><category term="ssh"></category><category term="collabora"></category></entry><entry><title>Setting up a ChromiumOS dev environment</title><link href="https://memcpy.io/setting-up-a-chromiumos-dev-environment.html" rel="alternate"></link><published>2017-02-16T10:31:00+01:00</published><updated>2017-02-16T10:31:00+01:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2017-02-16:/setting-up-a-chromiumos-dev-environment.html</id><summary type="html">&lt;h2&gt;Set up environment&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;DEV_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/opt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;DEV_DIR&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;CHROMIUM_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;$DEV_DIR/chromiumos&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;CHROMIUM_DIR&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;$DEV_DIR/depot_tools:$PATH&amp;quot;&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;BOARD&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;specific&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Chromebook&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;being&lt;/span&gt; &lt;span class="n"&gt;targeted&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;more&lt;/span&gt; &lt;span class="n"&gt;generic&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;amd64-generic&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="k"&gt;more&lt;/span&gt; &lt;span class="n"&gt;useful&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;needs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;chell&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;USB_DEVICE&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;refers&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;flashing&lt;/span&gt; &lt;span class="n"&gt;ChromiumOS&lt;/span&gt; &lt;span class="n"&gt;onto&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;Chromebook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Make&lt;/span&gt; &lt;span class="n"&gt;sure&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;contain&lt;/span&gt; &lt;span class="n"&gt;anything&lt;/span&gt; &lt;span class="n"&gt;important&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;USB_DEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/dev/sda&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Install dependencies&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sudo apt install git-core gitk git-gui subversion curl&lt;/span&gt;
&lt;span class="err"&gt;cd $DEV_DIR&lt;/span&gt;
&lt;span class="err"&gt;git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Get ChromiumOS source&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CHROMIUM_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
repo init -u https://chromium.googlesource.com/chromiumos/manifest.git
repo sync -j25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Build ChromiumOS â€¦&lt;/h2&gt;</summary><content type="html">&lt;h2&gt;Set up environment&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;DEV_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/opt&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;DEV_DIR&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;CHROMIUM_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;$DEV_DIR/chromiumos&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;CHROMIUM_DIR&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;$DEV_DIR/depot_tools:$PATH&amp;quot;&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;BOARD&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;specific&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Chromebook&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;being&lt;/span&gt; &lt;span class="n"&gt;targeted&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;more&lt;/span&gt; &lt;span class="n"&gt;generic&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;amd64-generic&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="k"&gt;more&lt;/span&gt; &lt;span class="n"&gt;useful&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;needs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;chell&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;USB_DEVICE&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;refers&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;flashing&lt;/span&gt; &lt;span class="n"&gt;ChromiumOS&lt;/span&gt; &lt;span class="n"&gt;onto&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;Chromebook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Make&lt;/span&gt; &lt;span class="n"&gt;sure&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;contain&lt;/span&gt; &lt;span class="n"&gt;anything&lt;/span&gt; &lt;span class="n"&gt;important&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;USB_DEVICE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/dev/sda&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Install dependencies&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sudo apt install git-core gitk git-gui subversion curl&lt;/span&gt;
&lt;span class="err"&gt;cd $DEV_DIR&lt;/span&gt;
&lt;span class="err"&gt;git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Get ChromiumOS source&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CHROMIUM_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
repo init -u https://chromium.googlesource.com/chromiumos/manifest.git
repo sync -j25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Build ChromiumOS&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cros_sdk -- ./build_packages --board=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
cros_sdk -- ./build_image --board=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Flash ChromiumOS to storage medium&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cros_sdk -- cros flash --board=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; usb:/&lt;span class="nv"&gt;$USB_DEVICE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Install ChromiumOS on Chromebook&lt;/h2&gt;
&lt;h3&gt;Enter Chromebook into dev-mode&lt;/h3&gt;
&lt;p&gt;This part is highly device specific, and depends on how the manufacturer of your device has chosen
to implement the dev-mode switch.&lt;/p&gt;
&lt;p&gt;A partial list of devices and how to enter them into dev-mode can be found &lt;a href="https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Flash ChromiumOS to Chromebook&lt;/h3&gt;
&lt;p&gt;Fire up your Chrombook device and hit Ctrl+Alt+Back, followed by 'chronos' and hit enter.
Followed by the below command to install the ChromiumOS build that was just flashed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;/usr/sbin/chromeos-install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Debug an application&lt;/h2&gt;
&lt;h3&gt;On Chromebook&lt;/h3&gt;
&lt;p&gt;Again fire up your Chrombook device and hit Ctrl+Alt+Back, followed by 'chronos' and hit enter.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Remount&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="n"&gt;drive&lt;/span&gt; &lt;span class="k"&gt;read&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;write&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;remount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;gdbserver&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;reached&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iptables&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="k"&gt;INPUT&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="c1"&gt;--dport 1234 -j ACCEPT&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Run&lt;/span&gt; &lt;span class="n"&gt;gdb&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;listening&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="mi"&gt;1234&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opened&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;iptables&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;gdbserver&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1234&lt;/span&gt; &lt;span class="n"&gt;chrome&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;On dev machine&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;On&lt;/span&gt; &lt;span class="n"&gt;x86&lt;/span&gt;
&lt;span class="n"&gt;cros_sdk&lt;/span&gt; &lt;span class="c1"&gt;-- sudo USE=expat emerge cross-i686-pc-linux-gnu/gdb&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;On&lt;/span&gt; &lt;span class="n"&gt;ARMv7&lt;/span&gt;
&lt;span class="n"&gt;cros_sdk&lt;/span&gt; &lt;span class="c1"&gt;-- sudo USE=expat emerge cross-armv7a-cros-linux-gnueabi/gdb&lt;/span&gt;

&lt;span class="n"&gt;cros_sdk&lt;/span&gt; &lt;span class="c1"&gt;-- i686-pc-linux-gnu-gdb &amp;quot;/build/$BOARD/opt/google/chrome/chrome&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="n"&gt;sysroot&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;BOARD&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="n"&gt;remote&lt;/span&gt; &lt;span class="n"&gt;IP_ADDR_CHROMEBOOK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1234&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is a bit of a rough outline, and is only suitable for Chromebook devices that already are in dev-mode.&lt;/p&gt;
&lt;h2&gt;Thanks&lt;/h2&gt;
&lt;p&gt;This post has been a part of work undertaken by my employer &lt;a href="http://www.collabora.com"&gt;Collabora&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://dev.chromium.org/developers/how-tos/install-depot-tools"&gt;ChromiumOS Depo Tools&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.chromium.org/chromium-os/quick-start-guide"&gt;ChromiumOS Quick Start&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices"&gt;ChromiumOS Dev Mode&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.chromium.org/chromium-os/how-tos-and-troubleshooting/debugging-tips"&gt;ChromiumOS Debug&lt;/a&gt;&lt;/p&gt;</content><category term="chromiumos"></category><category term="linux"></category><category term="chromiumos"></category><category term="chromebook"></category><category term="collabora"></category></entry><entry><title>Ethernet device stress testing</title><link href="https://memcpy.io/ethernet-device-stress-testing.html" rel="alternate"></link><published>2016-08-25T13:05:00+02:00</published><updated>2016-08-25T13:05:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2016-08-25:/ethernet-device-stress-testing.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="/images/2016-08-25_ethernet_device_testing.png" title="Screenshot of python script"&gt;&lt;/p&gt;
&lt;p&gt;During testing of power management patches for usb ethernet dongles, a script
was needed to stress test connecting/disconnecting/reconnecting these devices.&lt;/p&gt;
&lt;p&gt;Luckily a script like that already exists as a part of the chromiumos project,
and can be found &lt;a href="https://chromium.googlesource.com/chromiumos/third_party/autotest/+/HEAD/client/site_tests/network_EthernetStressPlug/network_EthernetStressPlug.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That script does however not run standalone and requires a remote device
(chromebook) to execute on. So I took the liberty of changing it to support
local testing. The modified version can be found &lt;a href="files/2016-08-25/network_EthernetStressPlug.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This might come in handy for someone, if not, the script will at least be
archived on this site.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo pip2.7 install autotest
$ ip link
&lt;span class="m"&gt;1&lt;/span&gt;: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu &lt;span class="m"&gt;65536&lt;/span&gt; qdisc noqueue state UNKNOWN mode DEFAULT group default qlen &lt;span class="m"&gt;1&lt;/span&gt;
    link/loopback &lt;span class="m"&gt;00&lt;/span&gt;:00:00 â€¦&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Alt text" src="/images/2016-08-25_ethernet_device_testing.png" title="Screenshot of python script"&gt;&lt;/p&gt;
&lt;p&gt;During testing of power management patches for usb ethernet dongles, a script
was needed to stress test connecting/disconnecting/reconnecting these devices.&lt;/p&gt;
&lt;p&gt;Luckily a script like that already exists as a part of the chromiumos project,
and can be found &lt;a href="https://chromium.googlesource.com/chromiumos/third_party/autotest/+/HEAD/client/site_tests/network_EthernetStressPlug/network_EthernetStressPlug.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That script does however not run standalone and requires a remote device
(chromebook) to execute on. So I took the liberty of changing it to support
local testing. The modified version can be found &lt;a href="files/2016-08-25/network_EthernetStressPlug.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This might come in handy for someone, if not, the script will at least be
archived on this site.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo pip2.7 install autotest
$ ip link
&lt;span class="m"&gt;1&lt;/span&gt;: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu &lt;span class="m"&gt;65536&lt;/span&gt; qdisc noqueue state UNKNOWN mode DEFAULT group default qlen &lt;span class="m"&gt;1&lt;/span&gt;
    link/loopback &lt;span class="m"&gt;00&lt;/span&gt;:00:00:00:00:00 brd &lt;span class="m"&gt;00&lt;/span&gt;:00:00:00:00:00
&lt;span class="m"&gt;2&lt;/span&gt;: wlp2s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m"&gt;1500&lt;/span&gt; qdisc pfifo_fast state UP mode DORMANT group default qlen &lt;span class="m"&gt;1000&lt;/span&gt;
    link/ether &lt;span class="m"&gt;48&lt;/span&gt;:e2:44:f6:e8:5b brd ff:ff:ff:ff:ff:ff
&lt;span class="m"&gt;27&lt;/span&gt;: enx000ec689ab9e: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu &lt;span class="m"&gt;1500&lt;/span&gt; qdisc pfifo_fast state DOWN mode DEFAULT group default qlen &lt;span class="m"&gt;1000&lt;/span&gt;
    link/ether &lt;span class="m"&gt;00&lt;/span&gt;:0e:c6:89:ab:9e brd ff:ff:ff:ff:ff:ff
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;INTERFACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;enx000ec689ab9e
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;NUM_ITERATIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;
$ sudo python network_EthernetStressPlug.py &lt;span class="nv"&gt;$INTERFACE&lt;/span&gt; &lt;span class="nv"&gt;$NUM_ITERATIONS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="kernel"></category><category term="linux"></category><category term="kernel"></category><category term="script"></category><category term="collabora"></category><category term="chromiumos"></category></entry></feed>