<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>memset.io</title><link href="/" rel="alternate"></link><link href="/feeds/esp8266.atom.xml" rel="self"></link><id>/</id><updated>2015-10-11T13:16:00+02:00</updated><entry><title>WS2812 Welding Goggles</title><link href="/ws2812-welding-goggles.html" rel="alternate"></link><updated>2015-10-11T13:16:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:,2015-10-11:ws2812-welding-goggles.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="images/2015-10-11_goggles.png" title="WS2812 Welding Goggles" /&gt;&lt;/p&gt;
&lt;p&gt;The goggles were built using an AtTiny85 module and a WS2812B strip and some bits and bobs that were laying around. A more complete BOM can be found below.&lt;/p&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/robertfoss/digispark_ws2812_waves.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The animation is built ontop of the excellent &lt;a href="https://github.com/cpldcpu/light_ws2812/tree/master/light_ws2812_Arduino"&gt;light_ws2812&lt;/a&gt; library. It supports AtTiny85 better than other competing libraries like FastLED.&lt;/p&gt;
&lt;p&gt;The animation is built around an uin8_t sin function that approximatis sinus in the range between 0-255.&lt;/p&gt;
&lt;h2&gt;Video&lt;/h2&gt;
&lt;video controls&gt;
  &lt;source src="videos/2015-10-11_goggles.mp4" type="video/mp4"&gt;
Your browser does not support the video tag.
&lt;/video&gt;

&lt;h2&gt;Bill of materials&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;6â‚¬ &lt;a href="https://www.weldorado.de/"&gt;Weldorado STROOF DIN4 Welding Goggles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2$ &lt;a href="http://www.aliexpress.com/item/Free-shipping-GY-Digispark-Kickstarter-Mini-Development-board-TINY85-module-for-Ard-usb/32312040804.html?ws_ab_test=201407_4,201444_5,201409_4"&gt;Digispark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;23$ &lt;a href="http://www.aliexpress.com/item/1M-WS2812B-WS2811-IC-Chip-built-in-Black-PCB-144-leds-m-Digital-5050-RGB-LED/1838594646.html?ws_ab_test=201407_4,201444_5,201409_4"&gt;WS2812B Strip 144 LEDs/m&lt;/a&gt; - Only about a 5th of the length needed.&lt;/li&gt;
&lt;li&gt;2x$4 &lt;a href="http://www.aliexpress.com/item/Eachine-3D-X4-RC-Quadcopter-Spare-Parts-3-7V-300Mah-Battery/32335487012.html?ws_ab_test=201407_4,201444_5,201409_4"&gt;LiPo 3.7V 300mAh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;$3 &lt;a href="http://www.aliexpress.com/item/F14786-4-in-1-3-7V-Lipo-Battery-Charger-USB-Interface-4-Ports-For-Hubsan-X4/32394891091.html?ws_ab_test=201407_4,201444_5,201409_4"&gt;LiPo USB Charger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;$6 &lt;a href="http://www.aliexpress.com/item/10-pairs-of-battery-plug-connector-1S-2-Pins-Mirco-model-battery-connector/32305697134.html"&gt;Battery connector cable&lt;/a&gt; - Only a few will be needed.&lt;/li&gt;
&lt;li&gt;$4 &lt;a href="http://www.aliexpress.com/item/Free-shipping-NEW-1M-40-Flat-Color-Rainbow-Ribbon-Cable-wire-Rainbow-Cable-40P-colored-cable/32384971763.html?ws_ab_test=201407_4,201444_5,201409_4"&gt;Rainbow cable&lt;/a&gt; - Any cable would do, but this keeps the cables bunched.&lt;/li&gt;
&lt;li&gt;$3 &lt;a href="http://www.aliexpress.com/item/2rolls-lot-Sticky-Self-Adhesive-Velcro-Hook-and-Loop-Tape-Fastener-3m-20mm-Strip-Solid-Black/1446416834.html?ws_ab_test=201407_4,201444_5,201409_4"&gt;Black 20mm veclro&lt;/a&gt; - Only a small part will be needed for attaching to batteries and the inside of the goggles.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Things to keep in mind when ordering these parts are that Weldorado won't accept an order for a single pair of goggles. You will have to order 3-4 pairs. And additionally pay a decent chunk of change for the shipping. So the more goggles you can find a use for the cheaper it will get. They are very nice looking though. Especially the rubber ones. A thing to note about the goggles is that the headstrap that ships with them is failry useless and probably should be replaced.&lt;/p&gt;
&lt;p&gt;Another thing to be aware of is the fact that all orders from AliExpress will take at least 30 days to arrive to your door. Sometimes more. &lt;/p&gt;
&lt;h2&gt;Hardware construction&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Alt text" src="images/2015-10-11_goggles_inside.jpg" title="Welding Goggles - Inside" /&gt;&lt;/p&gt;
&lt;p&gt;You'll have to excuse the lack of a proper schematic, but this has been a fairly organic project.&lt;/p&gt;
&lt;p&gt;The connectors of for the batteries (B_VCC and B_GND), both WS2812B strips (LED_VCC, LED_GND and LED_DATA) and the digispark (DIG_5V, DIG_GND and DIG_PIN0) are soldered as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;B_VCC + LED_VCC + DIG_5V&lt;/li&gt;
&lt;li&gt;B_GND + LED_GND + DIG_GND&lt;/li&gt;
&lt;li&gt;LED_DATA + DIG_PIN0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Issues and TODOs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;There is complete lack of an off-switch, and plugging and unplugging the battery is slightly messy. Especially in the unlit situations where these goggles would be fun to wear.&lt;/li&gt;
&lt;li&gt;The brightness is static and can only be changed by reflashing the AtTiny85. A potentiometer or button that toggles between different intensities (and possibly an OFF of sleep mode) would be very useful.&lt;/li&gt;
&lt;li&gt;The current head strap is made out of leather and is slightly hard to put on yourself.&lt;/li&gt;
&lt;li&gt;The glass is black which does make it very hard to see when it's dark. Since that is when the goggles are most fun to use, maybe the glass should be replaced.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="AtTiny85"></category><category term="Digispark"></category><category term="WS2812"></category><category term="WS2812B"></category><category term="goggles"></category></entry><entry><title>User friendly setup of ESP8266 gadgets</title><link href="/user-friendly-setup-of-esp8266-gadgets.html" rel="alternate"></link><updated>2015-07-30T15:10:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:,2015-07-30:user-friendly-setup-of-esp8266-gadgets.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="images/2015-07-30_screenshot.png" title="Screenshot" /&gt;&lt;/p&gt;
&lt;p&gt;The ESP8266 lacks a simple end-user compatible way to be configured with the login details of the local WiFi. Running the ESP8266 in a 'captive portal' mode where every http request is hijacked and replaced with form allows the end user to submit the credentials of the local WiFi hotspot by simply connecting to an ESP8266 hosted access point.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/robertfoss/esp8266_nodemcu_wifi_setup"&gt;esp8266_nodemcu_wifi_setup&lt;/a&gt; is designed to provide a simple interface for users to configure their ESP8266/NodeMCU based devices through.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start ESP.&lt;/li&gt;
&lt;li&gt;Connect to the "SetupGadget" WiFi through your internet enabled thing of choice.&lt;/li&gt;
&lt;li&gt;Submit credentials of your local WiFi.&lt;/li&gt;
&lt;li&gt;The ESP reboots and connects to your local WiFi.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What is this magic! How could a mere mortal like me summon features like this?!&lt;/h2&gt;
&lt;p&gt;Let me tell you..&lt;/p&gt;
&lt;p&gt;By default DNS is not announced in the DHCP offer message, because a DNS server does not ship with NodeMCU.
In order to announce that the ESP8266 is running a DNS server, NodeMCU has to be recompiled to support that.
A guide to building NodeMCU can be found &lt;a href="http://memset.io/building-nodemcu-for-the-esp8266.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to the wonderful work of Andy Reischles on &lt;a href="https://github.com/reischle/CaptiveIntraweb/tree/dev"&gt;Captive Portal&lt;/a&gt;, a lua implementation of a domain hijacking DNS server exists. Which will allow an ESP8266 to redirect all traffic to itself.&lt;/p&gt;
&lt;h4&gt;Detailed guide&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;In dhcpserver.h, #define USE_DNS 1&lt;/li&gt;
&lt;li&gt;Build NodeMCU.&lt;/li&gt;
&lt;li&gt;Flash NodeMCU.&lt;/li&gt;
&lt;li&gt;Upload all .lua files &lt;strong&gt;and&lt;/strong&gt; index.html.&lt;/li&gt;
&lt;li&gt;Reboot ESP.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;What you need to do&lt;/h4&gt;
&lt;p&gt;After a user has connected throught the portal and sucessfully configured the the ESP8266 with the credentials of the local WiFi, something lua service should be started so that the ESP8266 actually does something.&lt;/p&gt;
&lt;p&gt;I would suggest adding something like this to init.lua:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dofile(&amp;quot;init_connected.lua&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where init_connected.lua is where your script resides.&lt;/p&gt;</summary><category term="NodeMCU"></category><category term="ESP8266"></category><category term="Setup"></category></entry><entry><title>Building NodeMCU for the ESP8266</title><link href="/building-nodemcu-for-the-esp8266.html" rel="alternate"></link><updated>2015-05-14T11:31:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:,2015-05-14:building-nodemcu-for-the-esp8266.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="images/2015-05-14_esp8266.jpg" title="ESP8266" /&gt;&lt;/p&gt;
&lt;p&gt;This is a simple step-by-step guide to building and flashing NodeMCU for the ESP8266.&lt;/p&gt;
&lt;h3&gt;Build ESP8266 SDK&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;sudo apt-get install make unrar autoconf automake libtool gcc g++ gperf flex bison texinfo gawk ncurses-dev libexpat-dev python sed&lt;/span&gt;
&lt;span class="x"&gt;cd /opt&lt;/span&gt;
&lt;span class="x"&gt;git clone https://github.com/pfalcon/esp-open-sdk.git&lt;/span&gt;
&lt;span class="x"&gt;cd esp-open-sdk&lt;/span&gt;
&lt;span class="x"&gt;git submodule sync&lt;/span&gt;
&lt;span class="x"&gt;git submodule update&lt;/span&gt;
&lt;span class="x"&gt;make&lt;/span&gt;
&lt;span class="x"&gt;export PATH=/opt/esp-open-sdk/xtensa-lx106-elf/bin:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Build NodeMCU&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/nodemcu/nodemcu-firmware.git
cd nodemcu-firmware
# Switch to dev branch, since it&amp;#39;s the most up to date
git checkout --track origin/dev
# Make INTEGER version, since it uses less memory/space
make EXTRA_CCFLAGS=&amp;quot;-DLUA_NUMBER_INTEGRAL&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Flash NodeMCU&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;COMPORT=/dev/ttyUSB0 make flash
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Modifying NodeMCU to fit you needs&lt;/h3&gt;
&lt;h5&gt;app/include/user_modules.h&lt;/h5&gt;
&lt;p&gt;Contains a list of which modules to include in the build.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;...
#define LUA_USE_MODULES_NODE
#define LUA_USE_MODULES_FILE
#define LUA_USE_MODULES_GPIO
#define LUA_USE_MODULES_WIFI
#define LUA_USE_MODULES_NET
...
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;app/include/user_config.h&lt;/h5&gt;
&lt;p&gt;Contains NodeMCU developer options, but could be of use.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;...
#define DEVELOP_VERSION
#define NODE_ERROR
...
&lt;/pre&gt;&lt;/div&gt;</summary><category term="NodeMCU"></category><category term="ESP8266"></category></entry></feed>