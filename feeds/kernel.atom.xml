<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>memcpy.io</title><link href="http://memcpy.io/" rel="alternate"></link><link href="http://memcpy.io/feeds/kernel.atom.xml" rel="self"></link><id>http://memcpy.io/</id><updated>2016-08-30T13:05:00+02:00</updated><entry><title>Building Android for Qemu</title><link href="http://memcpy.io/building-android-for-qemu.html" rel="alternate"></link><updated>2016-08-30T13:05:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2016-08-30:building-android-for-qemu.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="images/2016-08-25_ethernet_device_testing.png" title="Screenshot of python script" /&gt;&lt;/p&gt;
&lt;p&gt;During testing of power management patches for usb ethernet dongles, a script
was needed to stress test connecting/disconnecting/reconnecting these devices.&lt;/p&gt;
&lt;p&gt;Luckily a script like that already exists as a part of the chromiumos project,
and can be found &lt;a href="https://chromium.googlesource.com/chromiumos/third_party/autotest/+/HEAD/client/site_tests/network_EthernetStressPlug/network_EthernetStressPlug.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That script does however not run standalone and requires a remote device
(chromebook) to execute on. So I took the liberty of changing it to support
local testing. The modified version can be found &lt;a href="files/2016-08-25_network_EthernetStressPlug.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This might come in handy for someone, if not, the script will at least be
archived on this site.&lt;/p&gt;
&lt;h2&gt;Install dependencies&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt install autoconf gcc-aarch64-linux-gnu libaio-dev libbluetooth-dev libbrlapi-dev libbz2-dev libcap-dev libcap-ng-dev libcurl4-gnutls-dev libepoxy-dev libfdt-dev libgbm-dev libgles2-mesa-dev libglib2.0-dev libibverbs-dev libjpeg8-dev liblzo2-dev libncurses5-dev libnuma-dev librbd-dev librdmacm-dev libsasl2-dev libsdl1.2-dev libsdl2-dev libseccomp-dev libsnappy-dev libssh2-1-dev libtool libusb-1.0-0 libusb-1.0-0-dev libvde-dev libvdeplug-dev libvte-2.90-dev libxen-dev valgrind xfslibs-dev xutils-dev zlib1g-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Set up paths&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export PROJECT_PATH=&amp;quot;/opt/qemu_android&amp;quot;
export QEMU_PATH=&amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PROJECT_PATH&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/qemu&amp;quot;
export LINUX_PATH=&amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PROJECT_PATH&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/linux-android&amp;quot;
export ANDROID_PATH=&amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PROJECT_PATH&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/android&amp;quot;
export ANDROID_TOOLS_PATH=&amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PROJECT_PATH&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/android-tools&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Virglrenderer&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone git://git.freedesktop.org/git/virglrenderer
cd virglrenderer
./autogen.sh
make
sudo make install
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Qemu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;git clone git://git.qemu-project.org/qemu.git &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;QEMU_PATH&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;mkdir &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;QEMU_PATH&lt;/span&gt;&lt;span class="x"&gt;/build&lt;/span&gt;
&lt;span class="x"&gt;cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;QEMU_PATH&lt;/span&gt;&lt;span class="x"&gt;/build&lt;/span&gt;
&lt;span class="x"&gt;../configure --target-list=aarch64-softmmu,x86_64-softmmu --enable-gtk --with-gtkabi=3.0 --enable-kvm&lt;/span&gt;
&lt;span class="x"&gt;make -j&lt;/span&gt;
&lt;span class="x"&gt;cd ../..&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Linux kernel&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;git clone http://git.linaro.org/people/rob.herring/linux.git &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;LINUX_PATH&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;LINUX_PATH&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;git checkout android-4.4&lt;/span&gt;
&lt;span class="x"&gt;make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- ranchu_defconfig&lt;/span&gt;
&lt;span class="x"&gt;make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j&lt;/span&gt;
&lt;span class="x"&gt;cd ..&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Android&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;mkdir &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_PATH&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;cd &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_PATH&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;repo init -u https://android.googlesource.com/platform/manifest -b master&lt;/span&gt;
&lt;span class="x"&gt;git clone https://github.com/robherring/android_manifest.git -b android-6.0 local_manifests&lt;/span&gt;
&lt;span class="x"&gt;cd ..&lt;/span&gt;
&lt;span class="x"&gt;repo sync -j&lt;/span&gt;
&lt;span class="x"&gt;cd device/linaro/generic&lt;/span&gt;
&lt;span class="x"&gt;make defconfig&lt;/span&gt;
&lt;span class="x"&gt;make all&lt;/span&gt;
&lt;span class="x"&gt;cd ../../..&lt;/span&gt;
&lt;span class="x"&gt;source build/envsetup.sh&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; Select linaro_arm64-userdebug or linaro_x86_64-userdebug&lt;/span&gt;
&lt;span class="x"&gt;lunch&lt;/span&gt;
&lt;span class="x"&gt;make -j&lt;/span&gt;
&lt;span class="x"&gt;cd ..&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;mkbootimg&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;git clone https://android.googlesource.com/platform/system/core.git &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_TOOLS_PATH&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_TOOLS_PATH&lt;/span&gt;&lt;span class="x"&gt;/mkbootimg/mkbootimg --kernel &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;LINUX_PATH&lt;/span&gt;&lt;span class="x"&gt;/arch/arm64/boot/Image --ramdisk &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_PATH&lt;/span&gt;&lt;span class="x"&gt;/out/target/product/linaro_arm64/ramdisk.img --output boot-db410c.img --dt dt.img --pagesize 2048 --base 0x80000000 --cmdline &amp;#39;rw console=ttyMSM0,115200n8&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Run Qemu machine&lt;/h2&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nb"&gt;set&lt;/span&gt; -e

&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$A&lt;/span&gt;&lt;span class="s2"&gt;NDROID_PATH/out/host/linux-x86/bin/:&lt;/span&gt;$&lt;span class="s2"&gt;PATH&amp;quot;&lt;/span&gt;


&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;arm64&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;QEMU_ARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$A&lt;/span&gt;RCH

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$A&lt;/span&gt;&lt;span class="s2"&gt;RCH&amp;quot;&lt;/span&gt; in
arm&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;QEMU_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-cpu cortex-a15 -machine type=virt&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;KERNEL_CMDLINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;console=ttyAMA0,38400 earlycon=pl011,0x09000000 debug nosmp drm.debug=0 rootwait androidboot.selinux=permissive&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/rob/proj/git/linux-2.6/.build-arm/arch/arm/boot/zImage
    &lt;span class="p"&gt;;;&lt;/span&gt;
arm64&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;QEMU_ARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aarch64&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;QEMU_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-cpu cortex-a57 -machine type=virt&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;KERNEL_CMDLINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;console=ttyAMA0,38400 earlycon=pl011,0x09000000 nosmp drm.debug=0 rootwait rootdelay=5 androidboot.selinux=permissive&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/rob/proj/git/linux-2.6/.build-arm64/arch/arm64/boot/Image
    &lt;span class="p"&gt;;;&lt;/span&gt;
x86_64&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/padovan/p/linux-trees/linux/arch/x86/boot/bzImage
    &lt;span class="nv"&gt;QEMU_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-enable-kvm -smp 2&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;KERNEL_CMDLINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;console=tty0 console=ttyS0 debug drm.debug=0 androidboot.selinux=permissive&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
x86&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;QEMU_ARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;x86_64&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;KERNEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/padovan/p/linux-trees/linux/arch/x86/boot/bzImage
    &lt;span class="nv"&gt;QEMU_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-enable-kvm -smp 2&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;KERNEL_CMDLINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;console=tty0 console=ttyS0 debug  drm.debug=0 androidboot.selinux=permissive&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nv"&gt;ANDROID_IMAGE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/padovan/p/aosp/out/target/product/linaro_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f system_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw -o &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_IMAGE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/system.img -nt system_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    simg2img &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_IMAGE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/system.img system_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f cache_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw -o &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_IMAGE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/cache.img -nt cache_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    simg2img &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_IMAGE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/cache.img cache_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f userdata_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw -o &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_IMAGE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/userdata.img -nt userdata_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    simg2img &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_IMAGE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/userdata.img userdata_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw
&lt;span class="k"&gt;fi&lt;/span&gt;

/home/padovan/p/qemu/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;QEMU_ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;-softmmu/qemu-system-&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;QEMU_ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;QEMU_OPTS&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -append &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;KERNEL_CMDLINE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -m &lt;span class="m"&gt;1024&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -serial mon:stdio &lt;span class="se"&gt;\&lt;/span&gt;
    -kernel $KERNEL &lt;span class="se"&gt;\&lt;/span&gt;
    -initrd &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ANDROID_IMAGE_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/ramdisk.img &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0,if&lt;span class="o"&gt;=&lt;/span&gt;none,id&lt;span class="o"&gt;=&lt;/span&gt;system,file&lt;span class="o"&gt;=&lt;/span&gt;system_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw &lt;span class="se"&gt;\&lt;/span&gt;
    -device virtio-blk-pci,drive&lt;span class="o"&gt;=&lt;/span&gt;system &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1,if&lt;span class="o"&gt;=&lt;/span&gt;none,id&lt;span class="o"&gt;=&lt;/span&gt;cache,file&lt;span class="o"&gt;=&lt;/span&gt;cache_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw &lt;span class="se"&gt;\&lt;/span&gt;
    -device virtio-blk-pci,drive&lt;span class="o"&gt;=&lt;/span&gt;cache &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2,if&lt;span class="o"&gt;=&lt;/span&gt;none,id&lt;span class="o"&gt;=&lt;/span&gt;userdata,file&lt;span class="o"&gt;=&lt;/span&gt;userdata_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ARCH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.raw &lt;span class="se"&gt;\&lt;/span&gt;
    -device virtio-blk-pci,drive&lt;span class="o"&gt;=&lt;/span&gt;userdata &lt;span class="se"&gt;\&lt;/span&gt;
    -netdev user,id&lt;span class="o"&gt;=&lt;/span&gt;mynet,hostfwd&lt;span class="o"&gt;=&lt;/span&gt;tcp::5550-:5555 -device virtio-net-pci,netdev&lt;span class="o"&gt;=&lt;/span&gt;mynet &lt;span class="se"&gt;\&lt;/span&gt;
    -device virtio-gpu-pci,virgl -display gtk,gl&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="se"&gt;\&lt;/span&gt;
    -device virtio-mouse-pci -device virtio-keyboard-pci &lt;span class="se"&gt;\&lt;/span&gt;
    -device nec-usb-xhci,id&lt;span class="o"&gt;=&lt;/span&gt;xhci                    &lt;span class="se"&gt;\&lt;/span&gt;
    -device sdhci-pci &lt;span class="se"&gt;\&lt;/span&gt;
    -d guest_errors &lt;span class="se"&gt;\&lt;/span&gt;
    -nodefaults &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;$*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="linux"></category><category term="kernel"></category><category term="android"></category><category term="qemu"></category></entry><entry><title>Ethernet device stress testing</title><link href="http://memcpy.io/ethernet-device-stress-testing.html" rel="alternate"></link><updated>2016-08-25T13:05:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2016-08-25:ethernet-device-stress-testing.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="images/2016-08-25_ethernet_device_testing.png" title="Screenshot of python script" /&gt;&lt;/p&gt;
&lt;p&gt;During testing of power management patches for usb ethernet dongles, a script
was needed to stress test connecting/disconnecting/reconnecting these devices.&lt;/p&gt;
&lt;p&gt;Luckily a script like that already exists as a part of the chromiumos project,
and can be found &lt;a href="https://chromium.googlesource.com/chromiumos/third_party/autotest/+/HEAD/client/site_tests/network_EthernetStressPlug/network_EthernetStressPlug.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That script does however not run standalone and requires a remote device
(chromebook) to execute on. So I took the liberty of changing it to support
local testing. The modified version can be found &lt;a href="files/2016-08-25_network_EthernetStressPlug.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This might come in handy for someone, if not, the script will at least be
archived on this site.&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ sudo pip2.7 install autotest
$ ip link
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu &lt;span class="m"&gt;65536&lt;/span&gt; qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: wlp2s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span class="m"&gt;1500&lt;/span&gt; qdisc pfifo_fast state UP mode DORMANT group default qlen 1000
    link/ether 48:e2:44:f6:e8:5b brd ff:ff:ff:ff:ff:ff
27: enx000ec689ab9e: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu &lt;span class="m"&gt;1500&lt;/span&gt; qdisc pfifo_fast state DOWN mode DEFAULT group default qlen 1000
    link/ether 00:0e:c6:89:ab:9e brd ff:ff:ff:ff:ff:ff
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;INTERFACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;enx000ec689ab9e
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;NUM_ITERATIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10
$ sudo python network_EthernetStressPlug.py $INTERFACE $NUM_ITERATIONS
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="kernel"></category><category term="script"></category><category term="collabora"></category><category term="chromiumos"></category></entry><entry><title>Linux kernel development shell scripts</title><link href="http://memcpy.io/linux-kernel-development-shell-scripts.html" rel="alternate"></link><updated>2016-07-26T10:32:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2016-07-26:linux-kernel-development-shell-scripts.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="images/2016-07-26_linux_development_helper_script.png" title="Terminal screenshot of scripts in use" /&gt;&lt;/p&gt;
&lt;p&gt;While upstreaming kernel patches scripts/checkpatch.pl and scripts/get_maintainer.pl
often come in handy.
But to me the interface they provide is slightly bulky and rely
on using patch files instead of git commits, which to me is a bit inconvenient.&lt;/p&gt;
&lt;p&gt;These scripts are all meant to be included in &lt;strong&gt;.bashrc&lt;/strong&gt; or &lt;strong&gt;.zshrc&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;scripts/checkpatch.pl helper&lt;/h2&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; checkpatch &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="p"&gt;+x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;exec&lt;/span&gt; git diff &lt;span class="p"&gt;|&lt;/span&gt; scripts/checkpatch.pl --no-signoff -q -
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; *&lt;span class="s2"&gt;&amp;quot;cache&amp;quot;&lt;/span&gt;* &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;exec&lt;/span&gt; git diff --cached &lt;span class="p"&gt;|&lt;/span&gt; scripts/checkpatch.pl --no-signoff -q -
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="nv"&gt;NUM_COMMITS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
    &lt;span class="nb"&gt;exec&lt;/span&gt; git diff HEAD~$NUM_COMMITS..HEAD &lt;span class="p"&gt;|&lt;/span&gt; scripts/checkpatch.pl --no-signoff -q -
  &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The checkpatch script simple wraps the patch creation process and allows you to
right away specify which &lt;/p&gt;
&lt;h4&gt;Example&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~/work/linux $ checkpatch 15
WARNING: ENOSYS means &amp;#39;invalid syscall nr&amp;#39; and nothing else
#349: FILE: drivers/tty/serial/sh-sci.c:3026:
+   if (IS_ERR(sciport-&amp;gt;gpios) &amp;amp;&amp;amp; PTR_ERR(sciport-&amp;gt;gpios) != -ENOSYS)

total: 0 errors, 1 warnings, 385 lines checked
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this example the 15 last commits are checked against scripts/checkpatch.pl
for correctness.&lt;/p&gt;
&lt;h2&gt;scripts/get_maintainer.pl helper&lt;/h2&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; get_maintainer &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;NUM_COMMITS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;

  &lt;span class="nv"&gt;MAINTAINERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;git format-patch HEAD~$NUM_COMMITS..HEAD --stdout &lt;span class="p"&gt;|&lt;/span&gt; scripts/get_maintainer.pl&lt;span class="k"&gt;)&lt;/span&gt;

  &lt;span class="c1"&gt;# Remove extraneous stats&lt;/span&gt;
  &lt;span class="nv"&gt;MAINTAINERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;MAINTAINERS&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/(.*//g&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

  &lt;span class="c1"&gt;# Remove names from email addresses&lt;/span&gt;
  &lt;span class="nv"&gt;MAINTAINERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;MAINTAINERS&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/.*&amp;lt;//g&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

  &lt;span class="c1"&gt;# Remove left over character&lt;/span&gt;
  &lt;span class="nv"&gt;MAINTAINERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;MAINTAINERS&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/&amp;gt;//g&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;MAINTAINERS&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; email&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;--to=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;email&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;  &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;Example&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;~/work/linux $ get_maintainer 1
--to=gregkh@linuxfoundation.org  --to=jslaby@suse.com  --to=linux-serial@vger.kernel.org  --to=linux-kernel@vger.kernel.org

~/work/linux $ git send-email -1 $(get_maintainer 1)
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="kernel"></category><category term="script"></category></entry></feed>