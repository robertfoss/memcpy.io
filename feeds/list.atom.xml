<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>memcpy.io - list</title><link href="https://memcpy.io/" rel="alternate"></link><link href="https://memcpy.io/feeds/list.atom.xml" rel="self"></link><id>https://memcpy.io/</id><updated>2021-03-08T12:23:00+01:00</updated><entry><title>Applying mailing list patches with 'git b4'</title><link href="https://memcpy.io/applying-mailing-list-patches-with-git-b4.html" rel="alternate"></link><published>2021-03-08T12:23:00+01:00</published><updated>2021-03-08T12:23:00+01:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2021-03-08:/applying-mailing-list-patches-with-git-b4.html</id><summary type="html">&lt;p&gt;&lt;a href="/images/2021-03-08_git_b4.png"&gt;&lt;img alt="Alt text" src="/images/2021-03-08_git_b4.png" title="git b4 shell output"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://people.kernel.org/monsieuricon/introducing-b4-and-patch-attestation"&gt;b4&lt;/a&gt; was created by
&lt;a href="https://people.kernel.org/monsieuricon/"&gt;Konstantin Ryabitsev&lt;/a&gt; and has become a very frequently
used tool for me.&lt;/p&gt;
&lt;p&gt;It supports a lot of different ways for interacting with the Linux Kernel mailing lists.
Of these the &lt;code&gt;b4 am&lt;/code&gt; subcommand is what I primarily use. This subcommand downloads all of
the patches belonging to a patch series and drops them into a &lt;code&gt;.mbox&lt;/code&gt; file. But! It doesn't
apply them to the repository we're currently in, and herein lies the itch that I would like
to scratch.&lt;/p&gt;
&lt;p&gt;The inspiration for this hack is based on the
&lt;a href="https://twitter.com/widawsky/status/1365378004914905088"&gt;much nicer script&lt;/a&gt; that
&lt;a href="https://twitter.com/stellarhopper"&gt;@stellarhopper&lt;/a&gt; authored and
&lt;a href="https://twitter.com/widawsky"&gt;@widawsky&lt;/a&gt;
pointed out to me. But in order to give it more of a git feel, I opted to make it a git alias.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gitconfig â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a href="/images/2021-03-08_git_b4.png"&gt;&lt;img alt="Alt text" src="/images/2021-03-08_git_b4.png" title="git b4 shell output"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://people.kernel.org/monsieuricon/introducing-b4-and-patch-attestation"&gt;b4&lt;/a&gt; was created by
&lt;a href="https://people.kernel.org/monsieuricon/"&gt;Konstantin Ryabitsev&lt;/a&gt; and has become a very frequently
used tool for me.&lt;/p&gt;
&lt;p&gt;It supports a lot of different ways for interacting with the Linux Kernel mailing lists.
Of these the &lt;code&gt;b4 am&lt;/code&gt; subcommand is what I primarily use. This subcommand downloads all of
the patches belonging to a patch series and drops them into a &lt;code&gt;.mbox&lt;/code&gt; file. But! It doesn't
apply them to the repository we're currently in, and herein lies the itch that I would like
to scratch.&lt;/p&gt;
&lt;p&gt;The inspiration for this hack is based on the
&lt;a href="https://twitter.com/widawsky/status/1365378004914905088"&gt;much nicer script&lt;/a&gt; that
&lt;a href="https://twitter.com/stellarhopper"&gt;@stellarhopper&lt;/a&gt; authored and
&lt;a href="https://twitter.com/widawsky"&gt;@widawsky&lt;/a&gt;
pointed out to me. But in order to give it more of a git feel, I opted to make it a git alias.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gitconfig&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;snip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;b4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;!f() \&lt;/span&gt;
&lt;span class="ss"&gt;    {\&lt;/span&gt;
&lt;span class="ss"&gt;        b4 am $1 -l -o /tmp/ 2&amp;gt;&amp;amp;1 | \n\&lt;/span&gt;
&lt;span class="ss"&gt;        $( \n\&lt;/span&gt;
&lt;span class="ss"&gt;            mbx=$( \n\&lt;/span&gt;
&lt;span class="ss"&gt;                awk &amp;#39;/^Writing .*\\.mbx/{ print $2 }&amp;#39; \n\&lt;/span&gt;
&lt;span class="ss"&gt;            );  \n\&lt;/span&gt;
&lt;span class="ss"&gt;            [ -z \&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mbx&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; ] ||  \n\&lt;/span&gt;
&lt;span class="ss"&gt;                git am \&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mbx&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot; 1&amp;gt;&amp;amp;2; \n\&lt;/span&gt;
&lt;span class="ss"&gt;        );  \n\&lt;/span&gt;
&lt;span class="ss"&gt;    }; f&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;snip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I apologize in advance for the escaped hellscape that is this snippet, a hierarchy of
escapes is required to conform to the git function syntax when using both multiple lines and
quoted strings.&lt;/p&gt;
&lt;p&gt;A git syntax escape &lt;a href="https://gist.github.com/HaleTom/61e2c94dc4d76b58c9f38fc8b6cec3ae"&gt;script&lt;/a&gt;
written by &lt;a href="https://gist.github.com/HaleTom"&gt;Tom Hale&lt;/a&gt; made the escaping much easier.&lt;/p&gt;
&lt;h3&gt;Example&lt;/h3&gt;
&lt;p&gt;After dropping the above snippet into your &lt;code&gt;.gitconfig&lt;/code&gt;, go find the &lt;code&gt;Message-Id&lt;/code&gt; for the LKML
patch or series you want to apply.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; linux
linux$ git b4 &lt;span class="m"&gt;1607651182&lt;/span&gt;-12307-1-git-send-email-victor.liu@nxp.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category><category term="linux"></category><category term="kernel"></category><category term="development"></category><category term="shell"></category><category term="git"></category><category term="alias"></category><category term="b4"></category><category term="gitconfig"></category><category term="mbox"></category><category term="am"></category><category term="mailing"></category><category term="list"></category></entry></feed>