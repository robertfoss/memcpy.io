<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>memcpy.io - lxd</title><link>https://memcpy.io/</link><description></description><lastBuildDate>Mon, 03 Dec 2018 19:00:00 +0100</lastBuildDate><item><title>Running Docker privileged inside of LXC / LXD</title><link>https://memcpy.io/running-docker-privileged-inside-of-lxc-lxd.html</link><description>&lt;p&gt;&lt;a href="/images/2018-12-03_docker.png"&gt;&lt;img alt="Alt text" src="/images/2018-12-03_docker.png" title="Docker running inside of LXC"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Setup container on LXC Host&lt;/h2&gt;
&lt;p&gt;In order to give Docker in the guest privileges, the guest container
itself has to be given privileges.&lt;/p&gt;
&lt;p&gt;There is no simple switch for doing this in LXC unfortunately, but a few
config options will do the trick.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lxc launch images:ubuntu/bionic container

lxc config set container security.nesting true
lxc config set container security.privileged true
cat &amp;lt;&amp;lt;EOT | lxc config set container raw.lxc -
lxc.cgroup.devices.allow = a
lxc.cap.drop =
EOT

lxc restart container
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Setup docker on container&lt;/h2&gt;
&lt;p&gt;Just to verify that this works, start a privileged Docker container inside
of the LXC container.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ lxc &lt;span class="nb"&gt;exec&lt;/span&gt; container bash
$ docker run --privileged hello-world
Unable to find image &lt;span class="s1"&gt;&amp;#39;hello-world:latest&amp;#39;&lt;/span&gt; locally
latest: Pulling from library/hello-world
d1725b59e92d: Pull â€¦&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Foss</dc:creator><pubDate>Mon, 03 Dec 2018 19:00:00 +0100</pubDate><guid isPermaLink="false">tag:memcpy.io,2018-12-03:/running-docker-privileged-inside-of-lxc-lxd.html</guid><category>linux</category><category>virtualization</category><category>lxc</category><category>lxd</category><category>docker</category><category>privileges</category></item><item><title>Configuring QNAP LXC containers for VPNs using TUN</title><link>https://memcpy.io/configuring-qnap-lxc-containers-for-vpns-using-tun.html</link><description>&lt;p&gt;&lt;a href="/images/2018-06-24_lxc_config.png"&gt;&lt;img alt="Alt text" src="/images/2018-06-24_lxc_config.png" title="QNAP Container Station LXC Config"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Configuring the QNAP device&lt;/h3&gt;
&lt;p&gt;The first step is to SSH into your QNAP device using the &lt;em&gt;admin&lt;/em&gt; account.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh admin@NAS_IP
cat &amp;gt;&amp;gt; /share/Container/container-station-data/lib/lxc/CONTAINER_NAME/config &amp;lt;&amp;lt; EOF
lxc.cgroup.devices.allow = c 10:200 rwm
EOF
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configuring the container guest&lt;/h3&gt;
&lt;p&gt;The second step is open the QNAP web-ui, open the Container Station
application and enter the console of your container.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -i &amp;#39;/exit 0/d&amp;#39; /etc/rc.local
cat &amp;gt;&amp;gt; /etc/rc.local &amp;lt;&amp;lt; EOF
if ! [ -c /dev/net/tun ]; then
    mkdir -p /dev/net
    mknod -m 666 /dev/net/tun c 10 200
fi

exit 0
EOF
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lastly the container needs to be restarted, and then your VPN application
should be able to access TUN devices and work normally.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Foss</dc:creator><pubDate>Sun, 24 Jun 2018 22:16:00 +0200</pubDate><guid isPermaLink="false">tag:memcpy.io,2018-06-24:/configuring-qnap-lxc-containers-for-vpns-using-tun.html</guid><category>qnap</category><category>container</category><category>station</category><category>lxc</category><category>lxd</category><category>vpn</category><category>tun</category><category>tap</category></item></channel></rss>