<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>memcpy.io - nitrogen6</title><link href="https://memcpy.io/" rel="alternate"></link><link href="https://memcpy.io/feeds/nitrogen6.atom.xml" rel="self"></link><id>https://memcpy.io/</id><updated>2019-04-15T15:44:00+02:00</updated><entry><title>Running Android and Wayland on Embedded Devices</title><link href="https://memcpy.io/running-android-and-wayland-on-embedded-devices.html" rel="alternate"></link><published>2019-04-15T15:44:00+02:00</published><updated>2019-04-15T15:44:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2019-04-15:/running-android-and-wayland-on-embedded-devices.html</id><summary type="html">&lt;p&gt;&lt;a href="/running-android-next-to-wayland.html"&gt;A previous post&lt;/a&gt; introduced the &lt;a href="https://gitlab.collabora.com/spurv/device_freedesktop/blob/master/spurv/"&gt;SPURV&lt;/a&gt;
Android compatibility layer for Wayland based Linux environment.&lt;br&gt;
In this post we're going to dig into how you can run an Android application
on the very common i.MX6 based &lt;a href="https://boundarydevices.com/product/nitrogen6max/"&gt;Nitrogen6_MAX&lt;/a&gt;
board from &lt;a href="https://boundarydevices.com/"&gt;Boundary Devices&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Build SPURV for Nitrogen6_MAX&lt;/h2&gt;
&lt;h3&gt;Build Android&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir android; cd android
repo init -u https://android.googlesource.com/platform/manifest -b android-9.0.0_r10
git clone https://gitlab.collabora.com/spurv/android_manifest.git .repo/local_manifests/
repo sync -j15
. build/envsetup.sh
lunch spurv-eng
make -j12
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Build Linux Kernel&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://gitlab.collabora.com/zodiac/linux.git -b android-container
cd linux
sh ../android/device/freedesktop/spurv/build-kernel.sh
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create root filesystem&lt;/h3&gt;
&lt;p&gt;Just a kernel does not make an OS, so we're using Debian â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="/running-android-next-to-wayland.html"&gt;A previous post&lt;/a&gt; introduced the &lt;a href="https://gitlab.collabora.com/spurv/device_freedesktop/blob/master/spurv/"&gt;SPURV&lt;/a&gt;
Android compatibility layer for Wayland based Linux environment.&lt;br&gt;
In this post we're going to dig into how you can run an Android application
on the very common i.MX6 based &lt;a href="https://boundarydevices.com/product/nitrogen6max/"&gt;Nitrogen6_MAX&lt;/a&gt;
board from &lt;a href="https://boundarydevices.com/"&gt;Boundary Devices&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Build SPURV for Nitrogen6_MAX&lt;/h2&gt;
&lt;h3&gt;Build Android&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir android; cd android
repo init -u https://android.googlesource.com/platform/manifest -b android-9.0.0_r10
git clone https://gitlab.collabora.com/spurv/android_manifest.git .repo/local_manifests/
repo sync -j15
. build/envsetup.sh
lunch spurv-eng
make -j12
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Build Linux Kernel&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://gitlab.collabora.com/zodiac/linux.git -b android-container
cd linux
sh ../android/device/freedesktop/spurv/build-kernel.sh
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create root filesystem&lt;/h3&gt;
&lt;p&gt;Just a kernel does not make an OS, so we're using Debian as a base.&lt;br&gt;
The way we're going to create the root filesystem is using &lt;code&gt;debootstrap&lt;/code&gt;,
which is a tool for creating Debian based OS images.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install debootstrap qemu-user-static
sudo debootstrap --include=systemd,weston,systemd-container,udev,sudo,openssh-server,iputils-ping,pulseaudio,psmisc,bc --arch armhf --variant minbase testing rootfs http://deb.debian.org/debian/
sudo chroot rootfs adduser aosp --ingroup sudo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you'd like to make further changes to the OS, you can simply chroot into the
root directory, and and &lt;code&gt;qemu-user-static&lt;/code&gt; will automatically run the ARM binaries
inside of QEMU, which makes the process of running binaries from foreign
architectures transparent.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo chroot rootfs
ls -la /
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create &amp;amp; flash image&lt;/h3&gt;
&lt;p&gt;Now we're ready to integrate all of the above into one coeherent image.
This is where the Nitrogen6_MAX devboard targeting comes in.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;android/device/freedesktop/spurv/create_image.sh -b /dev/mmcblk0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The platform specific parts are contained in &lt;a href="https://gitlab.collabora.com/spurv/device_freedesktop/blob/master/spurv/uboot_nitrogen6qp-max.scr"&gt;uboot_nitrogen6qp-max.scr&lt;/a&gt;
and &lt;a href="https://gitlab.collabora.com/zodiac/device_freedesktop/blob/master/spurv/create_image.sh"&gt;create_image.sh&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Boot!&lt;/h2&gt;
&lt;p&gt;Pop the flashed SD-card into your device and restart it.
When it has booted, log in as &lt;code&gt;root/root&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In order to start Android, run one of these two commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Launch just and Android application
/home/aosp/run.sh

# Launch some Wayland applications and an Android one
/home/aosp/run_demo.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Starting the Android application might take a minute or two.&lt;/p&gt;
&lt;h2&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;A lot of different contributors enabled this work, both direcctly and indirectly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boundary Devices&lt;/li&gt;
&lt;li&gt;Pengutronix&lt;/li&gt;
&lt;li&gt;Zodiac&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post has been a part of work undertaken by my employer &lt;a href="http://www.collabora.com"&gt;Collabora&lt;/a&gt;.&lt;/p&gt;</content><category term="linux"></category><category term="open source"></category><category term="graphics"></category><category term="wayland"></category><category term="android"></category><category term="3d"></category><category term="acceleration"></category><category term="imx6"></category><category term="nitrogen6"></category></entry></feed>