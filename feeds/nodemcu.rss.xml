<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>memcpy.io - NodeMCU</title><link>http://memcpy.io/</link><description></description><lastBuildDate>Thu, 30 Jul 2015 15:10:00 +0200</lastBuildDate><item><title>User friendly setup of ESP8266 gadgets</title><link>http://memcpy.io/user-friendly-setup-of-esp8266-gadgets.html</link><description>&lt;p&gt;&lt;img alt="Alt text" src="images/2015-07-30_screenshot.png" title="Screenshot"&gt;&lt;/p&gt;
&lt;p&gt;The ESP8266 lacks a simple end-user compatible way to be configured with the login details of the local WiFi. Running the ESP8266 in a 'captive portal' mode where every http request is hijacked and replaced with form allows the end user to submit the credentials of the local WiFi hotspot by simply connecting to an ESP8266 hosted access point.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/robertfoss/esp8266_nodemcu_wifi_setup"&gt;esp8266_nodemcu_wifi_setup&lt;/a&gt; is designed to provide a simple interface for users to configure their ESP8266/NodeMCU based devices through.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start ESP.&lt;/li&gt;
&lt;li&gt;Connect to the "SetupGadget" WiFi through your internet enabled thing of choice.&lt;/li&gt;
&lt;li&gt;Submit credentials of your local WiFi.&lt;/li&gt;
&lt;li&gt;The ESP reboots and connects to your local WiFi.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What is this magic! How could a mere mortal like me summon features like this?!&lt;/h2&gt;
&lt;p&gt;Let me tell you …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Foss</dc:creator><pubDate>Thu, 30 Jul 2015 15:10:00 +0200</pubDate><guid isPermaLink="false">tag:memcpy.io,2015-07-30:/user-friendly-setup-of-esp8266-gadgets.html</guid><category>NodeMCU</category><category>ESP8266</category><category>Setup</category></item><item><title>Building NodeMCU for the ESP8266</title><link>http://memcpy.io/building-nodemcu-for-the-esp8266.html</link><description>&lt;p&gt;&lt;img alt="Alt text" src="images/2015-05-14_esp8266.jpg" title="ESP8266"&gt;&lt;/p&gt;
&lt;p&gt;This is a simple step-by-step guide to building and flashing NodeMCU for the ESP8266.&lt;/p&gt;
&lt;h3&gt;Build ESP8266 SDK&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;sudo apt-get install make unrar autoconf automake libtool gcc g++ gperf flex bison texinfo gawk ncurses-dev libexpat-dev python sed&lt;/span&gt;
&lt;span class="x"&gt;cd /opt&lt;/span&gt;
&lt;span class="x"&gt;git clone https://github.com/pfalcon/esp-open-sdk.git&lt;/span&gt;
&lt;span class="x"&gt;cd esp-open-sdk&lt;/span&gt;
&lt;span class="x"&gt;git submodule sync&lt;/span&gt;
&lt;span class="x"&gt;git submodule update&lt;/span&gt;
&lt;span class="x"&gt;make&lt;/span&gt;
&lt;span class="x"&gt;export PATH=/opt/esp-open-sdk/xtensa-lx106-elf/bin:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Build NodeMCU&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/nodemcu/nodemcu-firmware.git
cd nodemcu-firmware
# Switch to dev branch, since it&amp;#39;s the most up to date
git checkout --track origin/dev
# Make INTEGER version, since it uses less memory/space
make EXTRA_CCFLAGS=&amp;quot;-DLUA_NUMBER_INTEGRAL&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Flash NodeMCU&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;COMPORT=/dev/ttyUSB0 make flash
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Modifying NodeMCU to fit your needs&lt;/h3&gt;
&lt;h5&gt;app/include/user_modules.h&lt;/h5&gt;
&lt;p&gt;Contains a list of which …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Foss</dc:creator><pubDate>Thu, 14 May 2015 11:31:00 +0200</pubDate><guid isPermaLink="false">tag:memcpy.io,2015-05-14:/building-nodemcu-for-the-esp8266.html</guid><category>NodeMCU</category><category>ESP8266</category></item></channel></rss>