<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>memcpy.io - qemu</title><link>https://memcpy.io/</link><description></description><lastBuildDate>Tue, 28 Nov 2017 11:32:00 +0100</lastBuildDate><item><title>Building ChromiumOS for Qemu</title><link>https://memcpy.io/building-chromiumos-for-qemu.html</link><description>&lt;p&gt;&lt;img alt="Alt text" src="/images/2017-11-28_chromeos_qemu.png" title="ChromiumOS running on Qemu"&gt;&lt;/p&gt;
&lt;p&gt;So let's start off by covering how ChromiumOS relates to ChromeOS. The
ChromiumOS project is essentially ChromeOS minus branding and some
packages for things like the media digital restrictions management.&lt;/p&gt;
&lt;p&gt;But on the whole, almost everything is there, and the pieces that aren't,
you don't &lt;em&gt;need&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;ChromiumOS&lt;/h2&gt;
&lt;h3&gt;Depot tools&lt;/h3&gt;
&lt;p&gt;In order to check out ChromiumOS and other large Google projects,
you'll need depot tools.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git&lt;/span&gt;
&lt;span class="err"&gt;export PATH=$PATH:$(PWD)/depot_tools&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maybe you'd want to add the PATH export to your .bashrc.&lt;/p&gt;
&lt;h3&gt;Building ChromiumOS&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir chromiumos
cd chromiumos
repo init -u https://chromium.googlesource.com/chromiumos/manifest.git --repo-url https://chromium.googlesource.com/external/repo.git [-g minilayout]
repo sync -j75
cros_sdk
export BOARD=amd64-generic
./setup_board --board …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Foss</dc:creator><pubDate>Tue, 28 Nov 2017 11:32:00 +0100</pubDate><guid isPermaLink="false">tag:memcpy.io,2017-11-28:/building-chromiumos-for-qemu.html</guid><category>kernel</category><category>linux</category><category>kernel</category><category>chromeos</category><category>chromiumos</category><category>chromium</category><category>qemu</category><category>ssh</category><category>collabora</category></item><item><title>Building Android for Qemu with Mesa and Virgil3D</title><link>https://memcpy.io/building-android-for-qemu-with-mesa-and-virgil3d.html</link><description>&lt;p&gt;&lt;img alt="Alt text" src="/images/2016-08-30_android_qemu.png" title="Android running on Qemu"&gt;&lt;/p&gt;
&lt;p&gt;Developing Linux for Android on Qemu allows you to do some things that are
not necessarily possible using the stock emulator.
For my purposes I need access to a GPU and be able to modify the driver, which
is where Virgilrenderer and Qemu comes in handy.&lt;/p&gt;
&lt;p&gt;The guide below helps you compile Android and run it on top of Qemu with
Mesa/Virgilrenderer supplying a virtual GPU.
Because of this, the following guide is aimed at Linux hosts.&lt;/p&gt;
&lt;p&gt;This guide is based on Rob Herrings &lt;a href="https://github.com/robherring/generic_device/wiki/KConfig-based-Multi-platform-Android-Device-(and-Mesa-graphics)"&gt;fantastic guide&lt;/a&gt;, but has
been slightly streamlined and had physical hardware support stripped out.&lt;/p&gt;
&lt;h2&gt;Install dependencies&lt;/h2&gt;
&lt;p&gt;These dependencies were available on Ubuntu 16.04, some alternative packages
might be needed for other distributions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;sudo apt install autoconf gcc-aarch64-linux-gnu libaio-dev libbluetooth-dev …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Foss</dc:creator><pubDate>Tue, 30 Aug 2016 15:22:00 +0200</pubDate><guid isPermaLink="false">tag:memcpy.io,2016-08-30:/building-android-for-qemu-with-mesa-and-virgil3d.html</guid><category>kernel</category><category>linux</category><category>kernel</category><category>android</category><category>qemu</category><category>collabora</category></item></channel></rss>