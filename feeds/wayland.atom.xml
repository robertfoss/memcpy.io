<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>memcpy.io - wayland</title><link href="http://memcpy.io/" rel="alternate"></link><link href="http://memcpy.io/feeds/wayland.atom.xml" rel="self"></link><id>http://memcpy.io/</id><updated>2016-06-03T10:32:00+02:00</updated><entry><title>Running Weston on a Raspbian</title><link href="http://memcpy.io/running-weston-on-a-raspbian.html" rel="alternate"></link><published>2016-06-03T10:32:00+02:00</published><updated>2016-06-03T10:32:00+02:00</updated><author><name>Robert Foss</name></author><id>tag:memcpy.io,2016-06-03:/running-weston-on-a-raspbian.html</id><summary type="html">&lt;p&gt;&lt;img alt="Alt text" src="/images/2016-06-03_weston.png" title="Weston running on a RPi2."&gt;&lt;/p&gt;
&lt;p&gt;Progress in the VC4 graphics camp and the Wayland camp now enables us to run
Weston on top of the drm backend for VC4 platforms. Previously software acceleration
using pixman was needed, but this is no longer the case.&lt;/p&gt;
&lt;p&gt;Additionally the rpi backend for weston is now being removed since it has been
obsoleted by the improved drm layer.&lt;/p&gt;
&lt;p&gt;Let's explore running hardware accelerated Weston on the Raspberry Pi.&lt;/p&gt;
&lt;h2&gt;Building Linux kernel&lt;/h2&gt;
&lt;p&gt;A comprehensive guide for building a recent Linux kernel for Raspberry Pi boards has
been written by the Raspberry Pi foundation and is available &lt;a href="https://www.raspberrypi.org/documentation/linux/kernel/building.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As of this writing the guide helps you build a v4.4 kernel which is good enough for our purposes.&lt;/p&gt;
&lt;h2&gt;Set up alternative install location&lt;/h2&gt;
&lt;p&gt;These build instructions â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Alt text" src="/images/2016-06-03_weston.png" title="Weston running on a RPi2."&gt;&lt;/p&gt;
&lt;p&gt;Progress in the VC4 graphics camp and the Wayland camp now enables us to run
Weston on top of the drm backend for VC4 platforms. Previously software acceleration
using pixman was needed, but this is no longer the case.&lt;/p&gt;
&lt;p&gt;Additionally the rpi backend for weston is now being removed since it has been
obsoleted by the improved drm layer.&lt;/p&gt;
&lt;p&gt;Let's explore running hardware accelerated Weston on the Raspberry Pi.&lt;/p&gt;
&lt;h2&gt;Building Linux kernel&lt;/h2&gt;
&lt;p&gt;A comprehensive guide for building a recent Linux kernel for Raspberry Pi boards has
been written by the Raspberry Pi foundation and is available &lt;a href="https://www.raspberrypi.org/documentation/linux/kernel/building.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As of this writing the guide helps you build a v4.4 kernel which is good enough for our purposes.&lt;/p&gt;
&lt;h2&gt;Set up alternative install location&lt;/h2&gt;
&lt;p&gt;These build instructions are based on the &lt;a href="https://wayland.freedesktop.org/building.html"&gt;Wayland instructions&lt;/a&gt;
from freedesktop.org, but altered to target VC4 and Raspbian.&lt;/p&gt;
&lt;p&gt;You probably don't want to install experimental builds of software among the usual
software of your operating system, so let's define a prefix for where to install
our builds.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Change WLD to any location you like
export WLD=~/local
export LD_LIBRARY_PATH=$WLD/lib
export PKG_CONFIG_PATH=$WLD/lib/pkgconfig/:$WLD/share/pkgconfig/
export PATH=$WLD/bin:$PATH
export ACLOCAL_PATH=$WLD/share/aclocal
export ACLOCAL=&amp;quot;aclocal -I $ACLOCAL_PATH&amp;quot;

# Needed by autotools
mkdir -p $WLD/share/aclocal
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Installing dependencies&lt;/h2&gt;
&lt;p&gt;Start by installing the build dependencies of mesa, weston and wayland.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Enable source packages
sudo sed -e &amp;quot;s/#\sdeb-src/deb-src/g&amp;quot; -i /etc/apt/sources.list
sudo apt update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above step can alternatively be completed using the GUI of your
package manager, by enabling source packages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Install build dependencies of mesa
sudo apt-get build-dep mesa

# Install build dependencies of wayland/weston
sudo apt-get install \
  libevdev libevdev-dev \
  libwacom libwacom-dev \
  libxkbcommon libxkbcommon-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Building Mesa&lt;/h2&gt;
&lt;p&gt;Configure and compile mesa with vc4, wayland and EGL support.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git://anongit.freedesktop.org/mesa/mesa
cd mesa
./autogen.sh --prefix=$WLD \
  --enable-gles2 \
  --with-egl-platforms=x11,wayland,drm \
  --enable-gbm --enable-shared-glapi \
  --with-gallium-drivers=vc4 \
  --without-dri-drivers \
  --disable-va \
  --disable-vdpau \
  --disable-xvmc \
  --disable-omx
make -j4 &amp;amp;&amp;amp; make install
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Building Weston and dependencies&lt;/h2&gt;
&lt;p&gt;Weston and Wayland have a number of dependencies that also need to be fetched
and built.&lt;/p&gt;
&lt;h4&gt;Wayland&lt;/h4&gt;
&lt;p&gt;Weston is a Wayland compositor, so we're going to have to build Wayland.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git://anongit.freedesktop.org/wayland/wayland
cd wayland
./autogen.sh --prefix=$WLD
make -j4 &amp;amp;&amp;amp; make install
cd ..

git clone git://anongit.freedesktop.org/wayland/wayland-protocols
cd wayland-protocols
./autogen.sh --prefix=$WLD
make install
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;libinput&lt;/h4&gt;
&lt;p&gt;libinput is a dependency of Weston, handles input devices like keyboards, touchpads and mice.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git://anongit.freedesktop.org/wayland/libinput
cd libinput
./autogen.sh --prefix=$WLD
make -j4 &amp;amp;&amp;amp; make install
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Weston&lt;/h4&gt;
&lt;p&gt;Finally we've built all of the dependencies of Weston and can now build it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone git://anongit.freedesktop.org/wayland/weston
cd weston
./autogen.sh --prefix=$WLD \
  --disable-libunwind
make -j4 &amp;amp;&amp;amp;
sudo make install
cd ..
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Running Weston&lt;/h2&gt;
&lt;p&gt;That wasn't so bad, it took a little while, but now we're ready to start Weston.
Now, let's fire up a (virtual) terminal. Make sure that you're not running an
X terminal, ssh terminal or serial terminal.&lt;/p&gt;
&lt;p&gt;Running weston in this way depends on logind.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Make sure that &lt;span class="nv"&gt;$DISPLAY&lt;/span&gt; is unset.
unset DISPLAY

# And that &lt;span class="nv"&gt;$XDG_RUNTIME_DIR&lt;/span&gt; has been set and created.
if test -z &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;XDG_RUNTIME_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;; then
  export XDG_RUNTIME_DIR=/tmp/&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;UID&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;-runtime-dir
  if ! test -d &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;XDG_RUNTIME_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;; then
    mkdir &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;XDG_RUNTIME_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;
    chmod 0700 &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;XDG_RUNTIME_DIR&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;1
  fi
fi

# Run weston:
weston
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Try weston applications&lt;/h2&gt;
&lt;p&gt;Now that we're running weston, let's try some applications.
They're located in the top level directory of weston.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;weston-terminal&lt;/li&gt;
&lt;li&gt;weston-flower&lt;/li&gt;
&lt;li&gt;weston-gears&lt;/li&gt;
&lt;li&gt;weston-smoke&lt;/li&gt;
&lt;li&gt;weston-image&lt;/li&gt;
&lt;li&gt;weston-view&lt;/li&gt;
&lt;li&gt;weston-resizor&lt;/li&gt;
&lt;li&gt;weston-eventdemo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you've started all of your favorite applications you can grab a screenshot 
by pressing &lt;strong&gt;Super + s&lt;/strong&gt;, which will save wayland-screenshot.png in your home
directory.&lt;/p&gt;</content><category term="wayland"></category><category term="weston"></category><category term="rpi"></category><category term="rpi2"></category><category term="kernel"></category></entry></feed>